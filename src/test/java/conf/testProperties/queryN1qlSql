SELECT DISTINCT name FROM standard_bucket0 WHERE job_title LIKE 'S%' ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.job_title LIKE 'S%';
SELECT DISTINCT name FROM standard_bucket0 WHERE job_title LIKE '%u%' ORDER by name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.job_title LIKE '%u%';
SELECT DISTINCT name FROM standard_bucket0 WHERE job_title NOT LIKE 'S%' ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.job_title NOT LIKE 'S%';
SELECT DISTINCT name FROM standard_bucket0 WHERE job_title NOT LIKE '_ales' ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.job_title NOT LIKE '_ales';
SELECT DISTINCT name AS NAME from standard_bucket0 AS EMPLOYEE where EMPLOYEE.name LIKE '_mpl%' ORDER BY name:::SELECT DISTINCT employee.name as NAME FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.job_title LIKE '_mpl%';
SELECT DISTINCT name FROM standard_bucket0 WHERE join_mo BETWEEN 1 AND 6 ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.join_mo BETWEEN 1 AND 6;
SELECT DISTINCT name FROM standard_bucket0 WHERE join_day BETWEEN 1 AND 6 ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.join_day BETWEEN 1 AND 6;
SELECT DISTINCT name FROM standard_bucket0 WHERE join_day NOT BETWEEN 1 AND 6 ORDER BY name:::SELECT DISTINCT employee.name FROM employee JOIN emp_table ON employee.id=emp_table.employee_id WHERE emp_table.join_day NOT BETWEEN 1 AND 6;
SELECT tasks_points.task1 AS task from standard_bucket0 WHERE join_mo>7 GROUP BY tasks_points.task1 ORDER BY tasks_points.task1:::SELECT tasks_points.task1 AS task from tasks_points join emp_table ON tasks_points.id=emp_table.task_point_id WHERE emp_table.join_mo>7 GROUP BY tasks_points.task1 ORDER BY tasks_points.task1;
SELECT tasks_points.task1 AS task from standard_bucket0 WHERE join_mo>7 GROUP BY tasks_points.task1 HAVING COUNT(tasks_points.task1) > 0 AND MIN(join_day)=1 ORDER BY tasks_points.task1:::SELECT tasks_points.task1 AS task from tasks_points join emp_table ON tasks_points.id=emp_table.task_point_id WHERE emp_table.join_mo>7 GROUP BY tasks_points.task1 HAVING COUNT(tasks_points.task1) > 0 AND MIN(emp_table.join_day)=1 ORDER BY tasks_points.task1;
select ceil(test_rate) as rate from standard_bucket0:::select ceil(test_rate) as rate from emp_table;
select ceil(test_rate) as rate from standard_bucket0:::select ceil(test_rate) as rate from emp_table limit 1;
select name from standard_bucket0 where ceil(test_rate) > 5:::select name from emp_table join employee on emp_table.employee_id=employee.id where ceil(test_rate) > 5;
select name from standard_bucket0 where floor(test_rate) > 5:::select name from emp_table join employee on emp_table.employee_id=employee.id where floor(test_rate) > 5;
select name from standard_bucket0 where round(test_rate) > 5:::select name from emp_table join employee on emp_table.employee_id=employee.id where round(test_rate) > 5;
Select distinct name, email from standard_bucket0 where LENGTH(job_title) = 5:::Select distinct name, email from employee where LENGTH(name) = 10;
SELECT DISTINCT UPPER(job_title) as JOB from standard_bucket0:::SELECT DISTINCT UPPER(job_title) as JOB from emp_table;
select name, round(test_rate) as rate from standard_bucket0:::select name, round(test_rate) from emp_table join employee on emp_table.employee_id=employee.id;
SELECT join_mo, SUM(tasks_points.task1) as points_sum FROM standard_bucket0 WHERE join_mo < 5 GROUP BY join_mo ORDER BY join_mo::: SELECT join_mo, SUM(tasks_points.task1) as points_sum FROM emp_table join tasks_points on emp_table.task_point_id = tasks_points.id WHERE join_mo < 5 GROUP BY join_mo ORDER BY join_mo;
SELECT join_mo, AVG(tasks_points.task1) as points_avg FROM standard_bucket0 WHERE join_mo < 5 GROUP BY join_mo  ORDER BY join_mo:::SELECT join_mo, AVG(tasks_points.task1) as points_sum FROM emp_table join tasks_points on emp_table.task_point_id = tasks_points.id WHERE join_mo < 5 GROUP BY join_mo ORDER BY join_mo;
SELECT join_mo, AVG(test_rate) as rate FROM standard_bucket0 as employees WHERE job_title='Sales' GROUP BY join_mo HAVING AVG(employees.test_rate) > 0 and SUM(test_rate) < 100000:::SELECT join_mo, AVG(tasks_points.task1) as points_sum FROM emp_table join tasks_points on emp_table.task_point_id = tasks_points.id WHERE job_title='Sales' < 5 GROUP BY join_mo HAVING AVG(test_rate) > 0 and SUM(test_rate) < 100000;
SELECT join_mo, MIN(test_rate) as rate FROM standard_bucket0 as employees WHERE job_title='Sales' GROUP BY join_mo HAVING MIN(employees.test_rate) > 0 and SUM(test_rate) < 100000:::SELECT join_mo, AVG(tasks_points.task1) as points_sum FROM emp_table join tasks_points on emp_table.task_point_id = tasks_points.id WHERE job_title='Sales' < 5 GROUP BY join_mo HAVING MIN(test_rate) > 0 and SUM(test_rate) < 100000;
SELECT join_mo, MAX(test_rate) as rate FROM standard_bucket0 as employees WHERE job_title='Sales' GROUP BY join_mo HAVING MAX(employees.test_rate) > 0 and SUM(test_rate) < 100000:::SELECT join_mo, AVG(tasks_points.task1) as points_sum FROM emp_table join tasks_points on emp_table.task_point_id = tasks_points.id WHERE job_title='Sales' < 5 GROUP BY join_mo HAVING MAX(test_rate) > 0 and SUM(test_rate) < 100000;
SELECT job_title, CASE WHEN join_mo < 3 OR join_mo > 11 THEN 'winter' WHEN join_mo < 6 AND join_mo > 2 THEN 'spring' WHEN join_mo < 9 AND join_mo > 5 THEN 'summer' ELSE 'autumn' END AS period FROM standard_bucket0:::SELECT job_title, CASE WHEN join_mo < 3 OR join_mo > 11 THEN 'winter' WHEN join_mo < 6 AND join_mo > 2 THEN 'spring' WHEN join_mo < 9 AND join_mo > 5 THEN 'summer' ELSE 'autumn' END AS period FROM emp_table;
SELECT job_title, CASE job_title WHEN 'Sales' THEN 'Marketing' ELSE job_title END AS dept FROM standard_bucket0:::SELECT job_title, CASE job_title WHEN 'Sales' THEN 'Marketing' ELSE job_title END AS dept FROM emp_table;
SELECT DISTINCT tasks_points.task1 as task FROM standard_bucket0 WHERE tasks_points.task1 > 1 AND tasks_points.task1 < 4:::SELECT DISTINCT tasks_points.task1 as task FROM tasks_points WHERE tasks_points.task1 > 1 AND tasks_points.task1 < 4;
SELECT join_yr, test_rate FROM standard_bucket0 WHERE join_yr >= 2010 AND test_rate <= 4:::SELECT join_yr, test_rate FROM emp_table WHERE join_yr >= 2010 AND test_rate <= 4;
SELECT skills, VMs FROM standard_bucket0 WHERE skills is not null:::SELECT skills, VMs FROM emp_table join skills on emp_table.skill_id = skills.id join VMs on emp_table.VM_id = VMs.id;
SELECT count(join_yr) years, sum(test_rate) rate FROM standard_bucket0:::SELECT count(join_yr) years, sum(test_rate) rate FROM emp_table;
SELECT job_title, SUM(test_rate) % COUNT(distinct join_yr) as avg_per_year from standard_bucket0 group by job_title:::SELECT job_title, SUM(test_rate) % COUNT(distinct join_yr) as avg_per_year from emp_table group by job_title;
select name from standard_bucket0 union select email from standard_bucket0:::select name from employee union select email from employee;
select join_day from standard_bucket0 where join_day > abs(-10):::select join_day from emp_table where join_day > abs(-10);